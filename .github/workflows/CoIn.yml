name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.15.0'
    - name: Install dependencies
      run: npm install
    - name: Install sqlite3 globally
      run: npm install -g sqlite3 --save
    - name: Rebuild npm packages
      run: npm rebuild
    - name: Verify sqlite3 installation
      run: npm list -g sqlite3
    - name: Ensure correct permissions for project directory
      run: chmod -R 755 .
    - name: Start application
      run: |
        npm start &
        sleep 5
    - name: Stop application
      run: kill $(lsof -t -i:8000)
    - name: Run tests
      run: npm test
    - name: Static Code Analysis
      run: |
        npm install -g eslint
        npx eslint .
    - name: Code Coverage
      run: |
        npm install -g nyc
        nyc npm test
    - name: Build Docker image
      run: docker build . -t devopsbp
    - name: Push Docker image
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
        docker tag devopsbp $DOCKER_USERNAME/devopsbp
        docker push $DOCKER_USERNAME/devopsbp
    - name: Deploy ConfigMap to Kubernetes
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
      run: kubectl apply -f configmap.yaml
    - name: Deploy Secret to Kubernetes
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
      run: kubectl apply -f secret.yaml
    - name: Deploy Deployment to Kubernetes
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
      run: kubectl apply -f deployment.yaml
    - name: Deploy Service to Kubernetes
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
      run: kubectl apply -f service.yaml
    - name: Deploy Ingress to Kubernetes
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
      run: kubectl apply -f ingress.yaml
